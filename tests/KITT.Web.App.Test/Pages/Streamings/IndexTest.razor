@using Microsoft.JSInterop
@inherits TestContext

@code {
	public IndexTest()
	{
		this.AddTestAuthorization();

		var commonLocalizerMock = new Mock<IStringLocalizer<KITT.Web.App.Resources.Common>>();
		var indexLocalizerMock = new Mock<IStringLocalizer<KITT.Web.App.Resources.Pages.Streamings.Index>>();

		Services
			.AddSingleton<IStringLocalizer<KITT.Web.App.Resources.Common>>(commonLocalizerMock.Object)
			.AddSingleton<IStringLocalizer<KITT.Web.App.Resources.Pages.Streamings.Index>>(indexLocalizerMock.Object);
	}

	[Fact]
	public void Index_OpenStreamingDetail_Should_Open_Streaming_Detail_Url()
	{
		var item = new StreamingsListModel.StreamingListItemModel { Id = Guid.NewGuid(), Title = "test" };

		var clientMock = new Mock<IStreamingsClient>();
		clientMock.Setup(c => c.GetAllStreamingsAsync(It.IsAny<StreamingQueryModel>()))
			.ReturnsAsync(new StreamingsListModel { Items = new[] { item }, TotalItems = 1 });

		RegisterServices(clientMock: clientMock);

		var component = Render(
	@<KITT.Web.App.Pages.Streamings.Index />
	);
		var openDetailButton = component.Find($"button#openStreamingDetail-{item.Id}");
		openDetailButton.Click();

		var navigationManager = Services.GetRequiredService<FakeNavigationManager>();

		var expectedUri = $"{navigationManager.BaseUri}streamings/{item.Id}";
		Assert.Equal(expectedUri, navigationManager.Uri);
	}

	private void RegisterServices(Mock<IStreamingsClient>? clientMock = null, Mock<IDialogService>? dialogMock = null, Mock<ISnackbar>? snackbarMock = null)
	{
		if (clientMock is null)
			clientMock = new Mock<IStreamingsClient>();
		if (dialogMock is null)
			dialogMock = new Mock<IDialogService>();
		if (snackbarMock is null)
			snackbarMock = new Mock<ISnackbar>();

		var popoverServiceMock = new Mock<MudBlazor.IMudPopoverService>();
		popoverServiceMock.Setup(s => s.Register(It.IsAny<RenderFragment>()))
			.Returns(new MudPopoverHandler((builder) => { }, new Mock<IJSRuntime>().Object, () => { }));

		Services
			.AddSingleton<IStreamingsClient>(clientMock.Object)
			.AddSingleton<IDialogService>(dialogMock.Object)
			.AddSingleton<ISnackbar>(snackbarMock.Object)
			.AddSingleton<MudBlazor.Services.IKeyInterceptor>(new Mock<MudBlazor.Services.IKeyInterceptor>().Object)
			.AddSingleton<MudBlazor.IScrollManager>(new Mock<MudBlazor.IScrollManager>().Object)
			.AddSingleton<MudBlazor.IMudPopoverService>(popoverServiceMock.Object);
	}
}
