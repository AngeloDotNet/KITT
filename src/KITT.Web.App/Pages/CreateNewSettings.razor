@page "/settings/new"

@inject ISettingsClient Client
@inject NavigationManager Navigation

@attribute [Authorize]

<PageLayout PageTitle="Create new settings">
	<Toolbar>
		<a href="settings" class="btn btn-primary">Back</a>
	</Toolbar>
	<PageContent>
		<EditForm Model="model" OnValidSubmit="CreateNewSettingsAsync" class="col-md-12 mt-3">
			<DataAnnotationsValidator />

            @if (!string.IsNullOrWhiteSpace(errorMessage))
            {
                <div class="alert alert-danger">
                    @errorMessage
                </div>
            }

			<div class="form-group">
                <label for="twitchChannelUrl">Twitch channel</label>
                <div class="input-group">
                    <div class="input-group-prepend">
                        <span class="input-group-text" id="basic-addon3">https://www.twitch.tv/</span>
                    </div>
                    <InputText @bind-Value="model.TwitchChannel" class="form-control" id="twitchChannelUrl" />
                </div>
                <ValidationMessage For="() => model.TwitchChannel" />
            </div>

			<div class="form-group align-content-end">
                <button type="reset" class="btn btn-outline-primary mr-3">Cancel</button>
                <button type="submit" class="btn btn-primary">Save</button>
            </div>
		</EditForm>
	</PageContent>
</PageLayout>

@code {
	private CreateNewSettingsModel model = new();

	private string errorMessage;

	async Task CreateNewSettingsAsync()
	{
		try
		{
			await Client.CreateNewSettingsAsync(model);
			model = new();

            Navigation.NavigateTo("settings");
		}
        catch (ApplicationException ex)
        {
            errorMessage = ex.Message;
        }
	}
}
